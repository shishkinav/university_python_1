"""
5. Реализовать структуру «Рейтинг», представляющую собой набор 
натуральных чисел, который не возрастает. У пользователя нужно 
запрашивать новый элемент рейтинга. Если в рейтинге существуют 
элементы с одинаковыми значениями, то новый элемент с тем же 
значением должен разместиться после них.

Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

"""

my_list = [7, 5, 3, 3, 2]
temp_list = my_list.copy()

try:
    _number = input("Введите новый элемент рейтинга:\n")
    _number = int(_number)
    for idx, el in enumerate(my_list):
        if int(_number) >= el:
            my_list.insert(idx, _number)
            break
    if _number not in my_list:
        my_list.append(_number)
    print(f"{'Было:':>10} {temp_list}")
    print(f"{'Стало:':>10} {my_list}")
except ValueError:
    print("Введенное значение должно быть целочисленным!")

"""
Результат выполнения:

Введите новый элемент рейтинга:
>2
     Было: [7, 5, 3, 3, 2]
    Стало: [7, 5, 3, 3, 2, 2]

Введите новый элемент рейтинга:
>1
     Было: [7, 5, 3, 3, 2]
    Стало: [7, 5, 3, 3, 2, 1]

Введите новый элемент рейтинга:
>10
     Было: [7, 5, 3, 3, 2]
    Стало: [10, 7, 5, 3, 3, 2]

Введите новый элемент рейтинга:
>6
     Было: [7, 5, 3, 3, 2]
    Стало: [7, 6, 5, 3, 3, 2]

Введите новый элемент рейтинга:
>4
     Было: [7, 5, 3, 3, 2]
    Стало: [7, 5, 4, 3, 3, 2]

Введите новый элемент рейтинга:
>1
     Было: [7, 5, 3, 3, 2]
    Стало: [7, 5, 3, 3, 2, 1]

Введите новый элемент рейтинга:
>ыв
Введенное значение должно быть целочисленным!
"""